{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/TodosFilter.jsx","components/TodoApp.jsx","App.jsx","index.js"],"names":["TodoItem","React","memo","todos","todo","setTodos","setInput","useState","toggle","setToggle","className","classNames","completed","editing","type","id","onChange","map","item","checked","htmlFor","onDoubleClick","title","onClick","filter","onKeyUp","e","key","target","value","length","onEditHandler","onBlur","onLeaveHandler","autoFocus","TodoList","TodosFilter","setFilter","classValue","setClassValue","clickHandler","filterValue","currentTarget","textContent","href","selected","TodoApp","input","allTodos","setAllTodos","filteredTodos","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","filterHandler","activeTodos","completedTodos","onSubmit","preventDefault","Date","state","placeholder","onClickHandler","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a1f7001.chunk.js","sourcesContent":["/* eslint-disable arrow-body-style */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodoItem = React.memo(({\n  todos,\n  todo,\n  setTodos,\n  setInput,\n}) => {\n  const [toggle, setToggle] = useState(false);\n\n  const deleteHandler = () => {\n    setTodos(todos.filter(item => todo.id !== item.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(todos.map((item) => {\n      if (item.id === todo.id) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const onEditHandler = (e) => {\n    if (e.key === 'Enter' && e.target.value.length > 0) {\n      setInput(e.target.value);\n      setTodos(todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            title: e.target.value,\n          };\n        }\n\n        return item;\n      }));\n      setToggle(false);\n      setInput('');\n    }\n\n    if (e.key === 'Enter' && e.target.value.length === 0) {\n      setTodos(todos.filter(item => item.id !== todo.id));\n    }\n\n    if (e.key === 'Escape') {\n      setToggle(false);\n    }\n  };\n\n  const onLeaveHandler = (e) => {\n    if (e.target.value.length > 0) {\n      setInput(e.target.value);\n      setTodos(todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            title: e.target.value,\n          };\n        }\n\n        return item;\n      }));\n      setToggle(false);\n      setInput('');\n    }\n\n    if (e.target.value.length === 0) {\n      setToggle(false);\n    }\n  };\n\n  return (\n    <li className={classNames('', {\n      completed: todo.completed,\n      editing: toggle,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          onChange={completeHandler}\n          checked={todo.completed}\n        />\n        <label\n          htmlFor=\"toggle-view\"\n          onDoubleClick={() => setToggle(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          onClick={deleteHandler}\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n        />\n      </div>\n      {toggle && (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          id=\"editTodo\"\n          onKeyUp={e => onEditHandler(e)}\n          onBlur={e => onLeaveHandler(e)}\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus={toggle}\n        />\n      )}\n    </li>\n  );\n});\n","/* eslint-disable arrow-body-style */\nimport React from 'react';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = React.memo(({\n  todos,\n  setTodos,\n  setInput,\n}) => {\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          setTodos={setTodos}\n          todos={todos}\n          setInput={setInput}\n        />\n      ))}\n    </ul>\n  );\n});\n","/* eslint-disable arrow-body-style */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ todos, setFilter }) => {\n  const [classValue, setClassValue] = useState('');\n\n  const clickHandler = (value) => {\n    const filterValue = value.currentTarget.textContent;\n\n    setClassValue(filterValue);\n    setFilter(filterValue);\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames('', {\n            selected: classValue === 'All',\n          })}\n          onClick={e => clickHandler(e)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={e => clickHandler(e)}\n          className={classNames('', {\n            selected: classValue === 'Active',\n          })}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={e => clickHandler(e)}\n          className={classNames('', {\n            selected: classValue === 'Completed',\n          })}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { TodosFilter } from './TodosFilter';\n\nexport const TodoApp = React.memo(() => {\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [allTodos, setAllTodos] = useState(false);\n  const [filter, setFilter] = useState('All');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const onClickHandler = (e) => {\n    setInput(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!input) {\n      return;\n    }\n\n    const id = +new Date();\n    const todo = {\n      id,\n      title: input,\n      completed: false,\n    };\n\n    setTodos(state => [...state, todo]);\n    setInput('');\n  };\n\n  const allCompletedHandler = () => {\n    setAllTodos(!allTodos);\n    setTodos(todos.map((todo) => {\n      if (allTodos) {\n        return {\n          ...todo,\n          completed: true,\n        };\n      }\n\n      return {\n        ...todo,\n        completed: false,\n      };\n    }));\n  };\n\n  const filterHandler = () => {\n    switch (filter) {\n      case 'Completed':\n        setFilteredTodos(todos.filter(todo => todo.completed));\n        break;\n\n      case 'Active':\n        setFilteredTodos(todos.filter(todo => !todo.completed));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const removeTodosHandler = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  const setToLocalStrg = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  };\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    setToLocalStrg();\n  }, [todos, filter]);\n\n  const activeTodos = [...filteredTodos]\n    .filter(todo => !todo.completed).length;\n\n  const completedTodos = [...filteredTodos]\n    .filter(todo => todo.completed).length;\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>React Todo</h1>\n        <form onSubmit={submitHandler}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            data-cy=\"createTodo\"\n            value={input}\n            onChange={e => onClickHandler(e)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          data-cy=\"toggleAll\"\n          onChange={allCompletedHandler}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={filteredTodos}\n          setTodos={setTodos}\n          setInput={setInput}\n        />\n      </section>\n\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {activeTodos}\n            {' '}\n            items left\n          </span>\n\n          <TodosFilter\n            todos={filteredTodos}\n            setFilter={setFilter}\n          />\n\n          {completedTodos > 0 && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={removeTodosHandler}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </section>\n  );\n});\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}